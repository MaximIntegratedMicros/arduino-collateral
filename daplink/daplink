#!/bin/bash

# Note: Any non-zero exit code allows Arduino IDE to raise an error with no significance of the number itself

binPath=$1
binFile=$2
mountPoint=$3
options=$4

mountPath=""

# check OS type to decide the mount path
if [[ "$OSTYPE" == "darwin"* ]]; then
    mountPath="/Volumes/"$mountPoint
    options=$options" -X"   # exclude metadata on darwin based OS
else
    mountPath="/media/$USER/"$mountPoint
fi

if [[ "$options" == "-v"* ]]; then echo "Expecting a Maxim board at "$mountPath; fi # verbose

# verify that Maxim board is valid before copying(loading) the binary file
if ([ $mountPoint == "BOOTLOADER" ] && [ -e $mountPath"/DETAILS.TXT" ] && [ -e $mountPath"/HELP_FAQ.HTM" ]) \
    || ([ $mountPoint == "DAPLINK" ] && [ -e $mountPath"/DETAILS.TXT" ] && [ -e $mountPath"/MBED.HTM" ]); then

    if [[ "$options" == "-v"* ]]; then echo "Loading... "; fi   # verbose
    cp $options $binPath/$binFile $mountPath
    if [ ! $? == 0 ]; then exit 1; fi                           # verify cp passed
    if [[ "$options" == "-v"* ]]; then echo "Complete."; fi     # verbose

    # verify whether file has been copied
    if [[ "$options" == "-v"* ]]; then echo "Verifying..."; fi  # verbose
    if [ ! -e $mountPath/$binFile ]; then
        if [[ "$options" == "-v"* ]]; then echo -e "Failed. Check for Write permission on $mountPoint USB drive."; fi # verbose
        exit 1
    elif [[ "$options" == "-v"* ]]; then echo "Success."; fi    # verbose

else
    if [[ "$options" == "-v"* ]]; then echo "Either $mountPoint USB drive doesn't exists or a file on drive is missing."; fi # verbose
    exit 1
fi
